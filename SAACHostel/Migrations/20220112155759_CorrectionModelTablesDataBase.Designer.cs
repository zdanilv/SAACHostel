// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SAACHostel.Models;

#nullable disable

namespace SAACHostel.Migrations
{
    [DbContext(typeof(DataBaseModel))]
    [Migration("20220112155759_CorrectionModelTablesDataBase")]
    partial class CorrectionModelTablesDataBase
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.1");

            modelBuilder.Entity("SAACHostel.Models.DataBaseModel+Faculty", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Date_Create")
                        .HasColumnType("TEXT");

                    b.Property<string>("Full_name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Full_name_decan")
                        .HasColumnType("TEXT");

                    b.Property<string>("Phone_decane")
                        .HasColumnType("TEXT");

                    b.Property<string>("Short_name")
                        .HasColumnType("TEXT");

                    b.Property<int?>("UserID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("User_ID")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.HasIndex("UserID");

                    b.ToTable("Facultys");
                });

            modelBuilder.Entity("SAACHostel.Models.DataBaseModel+Hostel", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Count_Room")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Date_Create")
                        .HasColumnType("TEXT");

                    b.Property<string>("Home_address")
                        .HasColumnType("TEXT");

                    b.Property<int?>("LogEntryID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("LogEntry_ID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Phone")
                        .HasColumnType("TEXT");

                    b.Property<byte[]>("Photo_1")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("Photo_2")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("Photo_3")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("Photo_4")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("Photo_5")
                        .HasColumnType("BLOB");

                    b.Property<int?>("UserID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("User_ID")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.HasIndex("LogEntryID");

                    b.HasIndex("UserID");

                    b.ToTable("Hostels");
                });

            modelBuilder.Entity("SAACHostel.Models.DataBaseModel+LogEntry", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Date_Create")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Date_Ent")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Date_Ext")
                        .HasColumnType("TEXT");

                    b.Property<int>("Hostel_ID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Pay")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Room_ID")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("State")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Student_ID")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("UserID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("User_ID")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.HasIndex("UserID");

                    b.ToTable("LogEntrys");
                });

            modelBuilder.Entity("SAACHostel.Models.DataBaseModel+Room", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Capacity")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Date_Create")
                        .HasColumnType("TEXT");

                    b.Property<int?>("HostelID")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("LogEntryID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("LogEntry_ID")
                        .HasColumnType("INTEGER");

                    b.Property<byte[]>("Photo_1")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("Photo_2")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("Photo_3")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("Photo_4")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("Photo_5")
                        .HasColumnType("BLOB");

                    b.Property<int?>("UserID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("User_ID")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.HasIndex("HostelID");

                    b.HasIndex("LogEntryID");

                    b.HasIndex("UserID");

                    b.ToTable("Rooms");
                });

            modelBuilder.Entity("SAACHostel.Models.DataBaseModel+Specialty", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Date_Create")
                        .HasColumnType("TEXT");

                    b.Property<string>("Full_name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Short_name")
                        .HasColumnType("TEXT");

                    b.Property<int?>("UserID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("User_ID")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.HasIndex("UserID");

                    b.ToTable("Specialtys");
                });

            modelBuilder.Entity("SAACHostel.Models.DataBaseModel+Student", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Date_Create")
                        .HasColumnType("TEXT");

                    b.Property<int?>("FacultyID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Faculty_ID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("First_Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Group")
                        .HasColumnType("TEXT");

                    b.Property<string>("Home_address")
                        .HasColumnType("TEXT");

                    b.Property<string>("Last_Name")
                        .HasColumnType("TEXT");

                    b.Property<int?>("LogEntryID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("LogEntry_ID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Middle_Name")
                        .HasColumnType("TEXT");

                    b.Property<int>("Passport_ID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Phone")
                        .HasColumnType("TEXT");

                    b.Property<byte[]>("Photo")
                        .HasColumnType("BLOB");

                    b.Property<int?>("RoomID")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("SpecialtyID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Specialty_ID")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("UserID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("User_ID")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.HasIndex("FacultyID");

                    b.HasIndex("LogEntryID");

                    b.HasIndex("RoomID");

                    b.HasIndex("SpecialtyID");

                    b.HasIndex("UserID");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("SAACHostel.Models.DataBaseModel+User", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Active")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Date_Create")
                        .HasColumnType("TEXT");

                    b.Property<string>("First_Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Home_address")
                        .HasColumnType("TEXT");

                    b.Property<string>("Last_Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Login")
                        .HasColumnType("TEXT");

                    b.Property<string>("Middle_Name")
                        .HasColumnType("TEXT");

                    b.Property<int>("Pasport_ID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Password")
                        .HasColumnType("TEXT");

                    b.Property<string>("Phone")
                        .HasColumnType("TEXT");

                    b.Property<byte[]>("Photo")
                        .HasColumnType("BLOB");

                    b.HasKey("ID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("SAACHostel.Models.DataBaseModel+Faculty", b =>
                {
                    b.HasOne("SAACHostel.Models.DataBaseModel+User", "User")
                        .WithMany("Faculty")
                        .HasForeignKey("UserID");

                    b.Navigation("User");
                });

            modelBuilder.Entity("SAACHostel.Models.DataBaseModel+Hostel", b =>
                {
                    b.HasOne("SAACHostel.Models.DataBaseModel+LogEntry", "LogEntry")
                        .WithMany("Hostel")
                        .HasForeignKey("LogEntryID");

                    b.HasOne("SAACHostel.Models.DataBaseModel+User", "User")
                        .WithMany("Hostel")
                        .HasForeignKey("UserID");

                    b.Navigation("LogEntry");

                    b.Navigation("User");
                });

            modelBuilder.Entity("SAACHostel.Models.DataBaseModel+LogEntry", b =>
                {
                    b.HasOne("SAACHostel.Models.DataBaseModel+User", "User")
                        .WithMany("LogEntry")
                        .HasForeignKey("UserID");

                    b.Navigation("User");
                });

            modelBuilder.Entity("SAACHostel.Models.DataBaseModel+Room", b =>
                {
                    b.HasOne("SAACHostel.Models.DataBaseModel+Hostel", null)
                        .WithMany("Room")
                        .HasForeignKey("HostelID");

                    b.HasOne("SAACHostel.Models.DataBaseModel+LogEntry", "LogEntry")
                        .WithMany("Room")
                        .HasForeignKey("LogEntryID");

                    b.HasOne("SAACHostel.Models.DataBaseModel+User", "User")
                        .WithMany("Room")
                        .HasForeignKey("UserID");

                    b.Navigation("LogEntry");

                    b.Navigation("User");
                });

            modelBuilder.Entity("SAACHostel.Models.DataBaseModel+Specialty", b =>
                {
                    b.HasOne("SAACHostel.Models.DataBaseModel+User", "User")
                        .WithMany("Specialty")
                        .HasForeignKey("UserID");

                    b.Navigation("User");
                });

            modelBuilder.Entity("SAACHostel.Models.DataBaseModel+Student", b =>
                {
                    b.HasOne("SAACHostel.Models.DataBaseModel+Faculty", "Faculty")
                        .WithMany("Student")
                        .HasForeignKey("FacultyID");

                    b.HasOne("SAACHostel.Models.DataBaseModel+LogEntry", "LogEntry")
                        .WithMany("Student")
                        .HasForeignKey("LogEntryID");

                    b.HasOne("SAACHostel.Models.DataBaseModel+Room", null)
                        .WithMany("Student")
                        .HasForeignKey("RoomID");

                    b.HasOne("SAACHostel.Models.DataBaseModel+Specialty", "Specialty")
                        .WithMany("Student")
                        .HasForeignKey("SpecialtyID");

                    b.HasOne("SAACHostel.Models.DataBaseModel+User", "User")
                        .WithMany("Student")
                        .HasForeignKey("UserID");

                    b.Navigation("Faculty");

                    b.Navigation("LogEntry");

                    b.Navigation("Specialty");

                    b.Navigation("User");
                });

            modelBuilder.Entity("SAACHostel.Models.DataBaseModel+Faculty", b =>
                {
                    b.Navigation("Student");
                });

            modelBuilder.Entity("SAACHostel.Models.DataBaseModel+Hostel", b =>
                {
                    b.Navigation("Room");
                });

            modelBuilder.Entity("SAACHostel.Models.DataBaseModel+LogEntry", b =>
                {
                    b.Navigation("Hostel");

                    b.Navigation("Room");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("SAACHostel.Models.DataBaseModel+Room", b =>
                {
                    b.Navigation("Student");
                });

            modelBuilder.Entity("SAACHostel.Models.DataBaseModel+Specialty", b =>
                {
                    b.Navigation("Student");
                });

            modelBuilder.Entity("SAACHostel.Models.DataBaseModel+User", b =>
                {
                    b.Navigation("Faculty");

                    b.Navigation("Hostel");

                    b.Navigation("LogEntry");

                    b.Navigation("Room");

                    b.Navigation("Specialty");

                    b.Navigation("Student");
                });
#pragma warning restore 612, 618
        }
    }
}
